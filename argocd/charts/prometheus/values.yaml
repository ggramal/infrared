global:
  rbac:
    create: true
    pspEnabled: true
    pspAnnotations: {}

  imagePullSecrets: []

alertmanager-configs:
  enabled: false
  configs: {}

kube-state-metrics:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/kube-state-metrics

  extraArgs:
    metric-labels-allowlist: "pods=[*]"

  kubeResources:
    certificatesigningrequests: false
    configmaps: false
    cronjobs: false
    daemonsets: true
    deployments: true
    endpoints: false
    horizontalpodautoscalers: false
    ingresses: false
    jobs: false
    limitranges: false
    mutatingwebhookconfigurations: false
    namespaces: false
    networkpolicies: false
    nodes: false
    persistentvolumeclaims: true
    persistentvolumes: true
    poddisruptionbudgets: false
    pods: true
    replicasets: false
    replicationcontrollers: false
    resourcequotas: false
    secrets: false
    services: false
    statefulsets: true
    storageclasses: false
    verticalpodautoscalers: false
    validatingwebhookconfigurations: false
    volumeattachments: false

  serviceMonitor:
    enabled: true
    metricRelabelings:
      # ADD COMMON pod LABEL TO ALL METRICS
      # values based on orgiginal exported_pod label
      - sourceLabels:
          - "exported_pod"
        targetLabel: "pod"


operator:
  enabled: true

  defaultRules:
    create: false
  grafana:
    enabled: false
  kubeApiServer:
    enabled: false
  kubelet:
    enabled: false
  kubeControllerManager:
    enabled: false
  coreDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeProxy:
    enabled: false
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  prometheus:
    enabled: false
  alertmanager:
    enabled: false


  prometheusOperator:
    enabled: true
    admissionWebhooks:
      enabled: false


prometheus-blackbox-exporter:
  enabled: false

  resources:
    limits:
      memory: 300Mi
    requests:
      memory: 50Mi

  config:
    modules:
      http_2xx:
        prober: http
        timeout: 30s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          valid_status_codes: [200]
          method: GET
          no_follow_redirects: true
          fail_if_not_ssl: true
          headers:
            X-Healthcheck-Agent: "blackbox-exporter"

probes:
  enabled: false
  probes: {}

kong-plugins:
  enabled: false
  plugins: {}

prometheus-main:
  enabled: true

  prometheus:
    spec:
      enableAdminAPI: true

alertmanager-main:
  enabled: false
  config:
    global:
      resolve_timeout: 30m
    route:
      receiver: 'null'
      group_by: [env, alertname]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 3h
    receivers:
      - name: 'null'
    templates:
      - "/etc/alertmanager/config/*.tmpl"

prometheus-postgres-exporter:
  enabled: false

prometheus-rules:
  enabled: false
  #PrometheusRules: {}
  #PrometheusAlerts: {}
